/*nth highest salary*/
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT
BEGIN
  RETURN (
      SELECT DISTINCT(SALARY) FROM EMPLOYEE EMP1
      WHERE (N-1) = (
      SELECT COUNT(DISTINCT SALARY) FROM EMPLOYEE EMP2
      WHERE EMP2.SALARY > EMP1.SALARY
      )
      
  );
END

/*nth highest salary*/
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT
BEGIN
Declare M INT;
set M=N-1;
  RETURN (
      SELECT Salary FROM Employee 
      GROUP BY SALARY
      ORDER BY Salary DESC LIMIT 1 OFFSET M
  );
END

/*Rank scores with no holes*/
SELECT
SCORE,
DENSE_RANK() OVER(ORDER BY SCORE DESC) 'RANK'
FROM SCORES;

/*180. CONSECUTIVE NOS*/
SELECT DISTINCT(X.NUM) AS CONSECUTIVENUMS FROM
(SELECT NUM,
    LEAD(NUM) OVER(ORDER BY ID) LEADIN,
    LAG(NUM) OVER(ORDER BY ID) LAGGIN
FROM LOGS) X
WHERE X.NUM=X.LEADIN AND X.NUM=X.LAGGIN

/*EMPLOYEE SALARY > MANAGER SALARY - TAKE CARE OF TABLE ALIAS*/
SELECT A.NAME AS EMPLOYEE
FROM EMPLOYEE A JOIN EMPLOYEE B ON B.ID=A.MANAGERID
WHERE A.SALARY>B.SALARY

/*DUPLICATE EMAIL SUBMISSION*/
SELECT EMAIL
FROM PERSON
GROUP BY EMAIL
HAVING COUNT(EMAIL)>=2

/*CUSTOMERS WHO NEVER ORDER - USING IS NULL FUNCTION*/
SELECT B.NAME AS CUSTOMERS
FROM ORDERS A RIGHT JOIN CUSTOMERS B ON A.CUSTOMERID=B.ID
WHERE A.CUSTOMERID IS NULL

/*HIGHEST SALARY BY DEPARTMENT*/
WITH X AS(SELECT A.NAME AS EMP, A.SALARY AS SALARY, B.NAME AS DEPT, RANK() OVER(PARTITION BY B.NAME ORDER BY SALARY DESC) AS TEMP
FROM EMPLOYEE A JOIN DEPARTMENT B ON B.ID = A.DEPARTMENTID)

SELECT DEPT AS DEPARTMENT, EMP AS EMPLOYEE, SALARY AS SALARY
FROM X
WHERE TEMP = 1
GROUP BY DEPARTMENT, EMPLOYEE, SALARY

/*TOP 3 SALARIES PER DEPARTMENT*/
WITH X AS(SELECT A.NAME AS EMP, A.SALARY AS SALARY, B.NAME AS DEPT, DENSE_RANK() OVER(PARTITION BY B.NAME ORDER BY SALARY DESC) AS TEMP
FROM EMPLOYEE A JOIN DEPARTMENT B ON B.ID = A.DEPARTMENTID)

SELECT DEPT AS DEPARTMENT, EMP AS EMPLOYEE, SALARY AS SALARY
FROM X
WHERE TEMP<=3
GROUP BY DEPARTMENT, EMPLOYEE, SALARY

/*SECOND HIGHEST SALARY - NTH HIGHEST WOPRKS BUT RETURNS BLANK INSTEAD OF NULL - THEREFORE THIS SOLUTION*/
select max(salary) as SecondHighestSalary from Employee
where salary <> (select max(salary) from Employee)